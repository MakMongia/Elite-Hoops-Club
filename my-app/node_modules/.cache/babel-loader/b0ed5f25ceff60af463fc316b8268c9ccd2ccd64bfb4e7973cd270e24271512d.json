{"ast":null,"code":"var _jsxFileName = \"/Users/mayank.mongia/Desktop/Personal/Repo Final/BASKETBALLCLUB/Elite-Final/WIP/GettingThere/Untitled/my-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Header from './Component/Header/Header';\nimport Home from './Component/Main/Home/Home';\nimport Schedule from './Component/Main/Schedule/Schedule';\nimport Program from './Component/Main/Program/Program';\nimport Events from './Component/Main/UpcomingEvents/upcomingEvents';\nimport ContactUs from './Component/Main/ContactUs/ContactUs';\nimport Merchandise from './Component/Main/Merchandise/Merchandise';\nimport News from './Component/Main/News/News';\nimport Footer from './Component/Footer/Footer';\nimport ScrollToTopButton from './Component/Main/ScrollToTop/ScrollToTop';\nimport Weather from './Component/Main/Weather/Weather';\nimport allData from './data';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Define your state variables for search\n  const [searchText, setSearchText] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n\n  // Define the search logic\n  // Define the search logic\n  const handleSearch = query => {\n    setSearchText(query);\n    // Implement your search logic here\n    const results = allData.filter(item => item.title.toLowerCase().includes(query.toLowerCase()));\n    console.log(\"Search Query:\", query); // Debug log for search query\n    console.log(\"Search Results:\", results); // Debug log for search results\n    console.log(\"Item Title:\", item.title);\n    setSearchResults(results);\n  };\n\n  // Function to render component based on title\n  const renderComponent = title => {\n    const component = allData.find(item => item.title === title);\n    if (component) {\n      return /*#__PURE__*/_jsxDEV(component.component, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 14\n      }, this);\n    }\n    return null;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      searchResults: searchResults,\n      setSearchText: setSearchText,\n      handleSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), allData.map((item, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: renderComponent(item.title)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(ScrollToTopButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"zrFDSQquMCDbT6QT5a/2PWA4Brc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Header","Home","Schedule","Program","Events","ContactUs","Merchandise","News","Footer","ScrollToTopButton","Weather","allData","jsxDEV","_jsxDEV","App","_s","searchText","setSearchText","searchResults","setSearchResults","handleSearch","query","results","filter","item","title","toLowerCase","includes","console","log","renderComponent","component","find","fileName","_jsxFileName","lineNumber","columnNumber","className","children","map","index","Fragment","_c","$RefreshReg$"],"sources":["/Users/mayank.mongia/Desktop/Personal/Repo Final/BASKETBALLCLUB/Elite-Final/WIP/GettingThere/Untitled/my-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Header from './Component/Header/Header';\nimport Home from './Component/Main/Home/Home';\nimport Schedule from './Component/Main/Schedule/Schedule';\nimport Program from './Component/Main/Program/Program';\nimport Events from './Component/Main/UpcomingEvents/upcomingEvents';\nimport ContactUs from './Component/Main/ContactUs/ContactUs';\nimport Merchandise from './Component/Main/Merchandise/Merchandise'; \nimport News from './Component/Main/News/News';\nimport Footer from './Component/Footer/Footer';\nimport ScrollToTopButton from './Component/Main/ScrollToTop/ScrollToTop';\nimport Weather from './Component/Main/Weather/Weather';\nimport allData from './data';\n\nfunction App() {\n  // Define your state variables for search\n  const [searchText, setSearchText] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n\n  // Define the search logic\n// Define the search logic\nconst handleSearch = (query) => {\n  setSearchText(query);\n  // Implement your search logic here\n  const results = allData.filter(item => \n    item.title.toLowerCase().includes(query.toLowerCase())\n  );\n  console.log(\"Search Query:\", query); // Debug log for search query\n  console.log(\"Search Results:\", results); // Debug log for search results\n   console.log(\"Item Title:\", item.title);\n  setSearchResults(results);\n};\n\n\n  // Function to render component based on title\n  const renderComponent = (title) => {\n    const component = allData.find(item => item.title === title);\n    if (component) {\n      return <component.component />;\n    }\n    return null;\n  };\n\n  return (\n    <div className=\"App\">\n      {/* Pass searchResults, setSearchText, and handleSearch to the Header component */}\n      <Header searchResults={searchResults} setSearchText={setSearchText} handleSearch={handleSearch} />\n      {/* Render components dynamically */}\n      {allData.map((item, index) => (\n        <React.Fragment key={index}>\n          {renderComponent(item.title)}\n        </React.Fragment>\n      ))}\n      <ScrollToTopButton />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,2BAA2B;AAC9C,OAAOC,IAAI,MAAM,4BAA4B;AAC7C,OAAOC,QAAQ,MAAM,oCAAoC;AACzD,OAAOC,OAAO,MAAM,kCAAkC;AACtD,OAAOC,MAAM,MAAM,gDAAgD;AACnE,OAAOC,SAAS,MAAM,sCAAsC;AAC5D,OAAOC,WAAW,MAAM,0CAA0C;AAClE,OAAOC,IAAI,MAAM,4BAA4B;AAC7C,OAAOC,MAAM,MAAM,2BAA2B;AAC9C,OAAOC,iBAAiB,MAAM,0CAA0C;AACxE,OAAOC,OAAO,MAAM,kCAAkC;AACtD,OAAOC,OAAO,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACmB,aAAa,EAAEC,gBAAgB,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;;EAEtD;EACF;EACA,MAAMqB,YAAY,GAAIC,KAAK,IAAK;IAC9BJ,aAAa,CAACI,KAAK,CAAC;IACpB;IACA,MAAMC,OAAO,GAAGX,OAAO,CAACY,MAAM,CAACC,IAAI,IACjCA,IAAI,CAACC,KAAK,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACN,KAAK,CAACK,WAAW,CAAC,CAAC,CACvD,CAAC;IACDE,OAAO,CAACC,GAAG,CAAC,eAAe,EAAER,KAAK,CAAC,CAAC,CAAC;IACrCO,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEP,OAAO,CAAC,CAAC,CAAC;IACxCM,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEL,IAAI,CAACC,KAAK,CAAC;IACvCN,gBAAgB,CAACG,OAAO,CAAC;EAC3B,CAAC;;EAGC;EACA,MAAMQ,eAAe,GAAIL,KAAK,IAAK;IACjC,MAAMM,SAAS,GAAGpB,OAAO,CAACqB,IAAI,CAACR,IAAI,IAAIA,IAAI,CAACC,KAAK,KAAKA,KAAK,CAAC;IAC5D,IAAIM,SAAS,EAAE;MACb,oBAAOlB,OAAA,CAACkB,SAAS,CAACA,SAAS;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAChC;IACA,OAAO,IAAI;EACb,CAAC;EAED,oBACEvB,OAAA;IAAKwB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAElBzB,OAAA,CAACb,MAAM;MAACkB,aAAa,EAAEA,aAAc;MAACD,aAAa,EAAEA,aAAc;MAACG,YAAY,EAAEA;IAAa;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAEjGzB,OAAO,CAAC4B,GAAG,CAAC,CAACf,IAAI,EAAEgB,KAAK,kBACvB3B,OAAA,CAACf,KAAK,CAAC2C,QAAQ;MAAAH,QAAA,EACZR,eAAe,CAACN,IAAI,CAACC,KAAK;IAAC,GADTe,KAAK;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEV,CACjB,CAAC,eACFvB,OAAA,CAACJ,iBAAiB;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClB,CAAC;AAEV;AAACrB,EAAA,CA1CQD,GAAG;AAAA4B,EAAA,GAAH5B,GAAG;AA4CZ,eAAeA,GAAG;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}