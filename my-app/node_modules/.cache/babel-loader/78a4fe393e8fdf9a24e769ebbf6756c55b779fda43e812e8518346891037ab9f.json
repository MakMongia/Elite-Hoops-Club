{"ast":null,"code":"var _jsxFileName = \"/Users/mayank.mongia/Desktop/Personal/Repo Final/BASKETBALLCLUB/Elite-Final/WIP/GettingThere/Untitled/my-app/src/App.js\",\n  _s = $RefreshSig$();\n// App.js\nimport React, { useState } from 'react';\nimport Header from './Component/Header/Header';\nimport allData from './data'; // Import allData\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Define your state variables for search\n  const [searchText, setSearchText] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n\n  // Define the search logic\n  const handleSearch = query => {\n    setSearchText(query);\n    // Implement your search logic here\n    const results = allData.filter(item => item.title.toLowerCase().includes(query.toLowerCase()));\n    setSearchResults(results);\n  };\n\n  // Function to render component based on title\n  const renderComponent = title => {\n    const component = allData.find(item => item.title === title);\n    if (component) {\n      return /*#__PURE__*/_jsxDEV(component.component, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 14\n      }, this);\n    }\n    return null;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      searchResults: searchResults,\n      setSearchText: setSearchText,\n      handleSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), allData.map((item, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: renderComponent(item.title)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"zrFDSQquMCDbT6QT5a/2PWA4Brc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Header","allData","jsxDEV","_jsxDEV","App","_s","searchText","setSearchText","searchResults","setSearchResults","handleSearch","query","results","filter","item","title","toLowerCase","includes","renderComponent","component","find","fileName","_jsxFileName","lineNumber","columnNumber","className","children","map","index","Fragment","_c","$RefreshReg$"],"sources":["/Users/mayank.mongia/Desktop/Personal/Repo Final/BASKETBALLCLUB/Elite-Final/WIP/GettingThere/Untitled/my-app/src/App.js"],"sourcesContent":["// App.js\nimport React, { useState } from 'react';\nimport Header from './Component/Header/Header';\nimport allData from './data'; // Import allData\n\nfunction App() {\n  // Define your state variables for search\n  const [searchText, setSearchText] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n\n  // Define the search logic\n  const handleSearch = (query) => {\n    setSearchText(query);\n    // Implement your search logic here\n    const results = allData.filter(item => \n      item.title.toLowerCase().includes(query.toLowerCase())\n    );\n    setSearchResults(results);\n  };\n\n  // Function to render component based on title\n  const renderComponent = (title) => {\n    const component = allData.find(item => item.title === title);\n    if (component) {\n      return <component.component />;\n    }\n    return null;\n  };\n\n  return (\n    <div className=\"App\">\n      {/* Pass searchResults, setSearchText, and handleSearch to the Header component */}\n      <Header searchResults={searchResults} setSearchText={setSearchText} handleSearch={handleSearch} />\n      {/* Render components dynamically */}\n      {allData.map((item, index) => (\n        <React.Fragment key={index}>\n          {renderComponent(item.title)}\n        </React.Fragment>\n      ))}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,2BAA2B;AAC9C,OAAOC,OAAO,MAAM,QAAQ,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE9B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACS,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;;EAEtD;EACA,MAAMW,YAAY,GAAIC,KAAK,IAAK;IAC9BJ,aAAa,CAACI,KAAK,CAAC;IACpB;IACA,MAAMC,OAAO,GAAGX,OAAO,CAACY,MAAM,CAACC,IAAI,IACjCA,IAAI,CAACC,KAAK,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACN,KAAK,CAACK,WAAW,CAAC,CAAC,CACvD,CAAC;IACDP,gBAAgB,CAACG,OAAO,CAAC;EAC3B,CAAC;;EAED;EACA,MAAMM,eAAe,GAAIH,KAAK,IAAK;IACjC,MAAMI,SAAS,GAAGlB,OAAO,CAACmB,IAAI,CAACN,IAAI,IAAIA,IAAI,CAACC,KAAK,KAAKA,KAAK,CAAC;IAC5D,IAAII,SAAS,EAAE;MACb,oBAAOhB,OAAA,CAACgB,SAAS,CAACA,SAAS;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAChC;IACA,OAAO,IAAI;EACb,CAAC;EAED,oBACErB,OAAA;IAAKsB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAElBvB,OAAA,CAACH,MAAM;MAACQ,aAAa,EAAEA,aAAc;MAACD,aAAa,EAAEA,aAAc;MAACG,YAAY,EAAEA;IAAa;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAEjGvB,OAAO,CAAC0B,GAAG,CAAC,CAACb,IAAI,EAAEc,KAAK,kBACvBzB,OAAA,CAACL,KAAK,CAAC+B,QAAQ;MAAAH,QAAA,EACZR,eAAe,CAACJ,IAAI,CAACC,KAAK;IAAC,GADTa,KAAK;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEV,CACjB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACnB,EAAA,CApCQD,GAAG;AAAA0B,EAAA,GAAH1B,GAAG;AAsCZ,eAAeA,GAAG;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}