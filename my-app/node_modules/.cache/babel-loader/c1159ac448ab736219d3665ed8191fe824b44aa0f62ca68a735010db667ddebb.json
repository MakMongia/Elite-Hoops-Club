{"ast":null,"code":"var _jsxFileName = \"/Users/mayank.mongia/Desktop/Personal/Repo Final/BASKETBALLCLUB/Elite-Final/WIP/GettingThere/Untitled/my-app/src/Component/Main/Transcript/Transcript.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport \"./Transcript.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Transcript = ({\n  text,\n  audioRef\n}) => {\n  _s();\n  const [highlightedIndex, setHighlightedIndex] = useState(-1); // Initial state set to -1\n  const [isPaused, setIsPaused] = useState(false);\n  useEffect(() => {\n    if (!audioRef.current) return;\n    const handleTimeUpdate = () => {\n      const currentTime = audioRef.current.currentTime;\n      console.log('Current Time:', currentTime);\n      const index = findHighlightedIndex(currentTime);\n      console.log('Highlighted Index:', index); // Add console log for highlighted index\n      setHighlightedIndex(index);\n    };\n    const findHighlightedIndex = currentTime => {\n      let totalDuration = 0;\n      for (let i = 0; i < text.length; i++) {\n        totalDuration += getParagraphDuration(i);\n        if (currentTime < totalDuration) {\n          return i;\n        }\n      }\n      return -1; // No paragraph should be highlighted\n    };\n    const getParagraphDuration = index => {\n      // Define custom durations for each paragraph\n      const customDurations = [7,\n      // Duration for the first paragraph\n      7,\n      // Duration for the second paragraph\n      5,\n      // Duration for the third paragraph\n      5,\n      // Duration for the fourth paragraph\n      7,\n      // Duration for the fifth paragraph\n      5,\n      // Duration for the sixth paragraph\n      5,\n      // Duration for the seventh paragraph\n      8,\n      // Duration for the eighth paragraph\n      2 // Duration for the ninth paragraph\n\n      // Add more durations as needed for each paragraph\n      ];\n      // Return the duration for the corresponding paragraph index\n      return customDurations[index] || 0;\n    };\n    const handleAudioPause = () => {\n      setIsPaused(true);\n      // Reset highlighted index only if not already paused\n      if (!isPaused) setHighlightedIndex(-1);\n    };\n    const handleAudioPlay = () => {\n      setIsPaused(false);\n    };\n    audioRef.current.addEventListener('timeupdate', handleTimeUpdate);\n    audioRef.current.addEventListener('pause', handleAudioPause);\n    audioRef.current.addEventListener('play', handleAudioPlay);\n    return () => {\n      audioRef.current.removeEventListener('timeupdate', handleTimeUpdate);\n      audioRef.current.removeEventListener('pause', handleAudioPause);\n      audioRef.current.removeEventListener('play', handleAudioPlay);\n    };\n  }, [audioRef, isPaused, text]); // Added text to dependency array\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `transcript ${isPaused ? 'paused' : ''}`,\n    children: text.map((sentence, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n      className: index === highlightedIndex ? 'highlighted' : '',\n      children: sentence\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(Transcript, \"AS1yn2iXdGb0IeakiJWTN3Wk15o=\");\n_c = Transcript;\nexport default Transcript;\nvar _c;\n$RefreshReg$(_c, \"Transcript\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Transcript","text","audioRef","_s","highlightedIndex","setHighlightedIndex","isPaused","setIsPaused","current","handleTimeUpdate","currentTime","console","log","index","findHighlightedIndex","totalDuration","i","length","getParagraphDuration","customDurations","handleAudioPause","handleAudioPlay","addEventListener","removeEventListener","className","children","map","sentence","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mayank.mongia/Desktop/Personal/Repo Final/BASKETBALLCLUB/Elite-Final/WIP/GettingThere/Untitled/my-app/src/Component/Main/Transcript/Transcript.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport \"./Transcript.css\"\n\nconst Transcript = ({ text, audioRef }) => {\n  const [highlightedIndex, setHighlightedIndex] = useState(-1); // Initial state set to -1\n  const [isPaused, setIsPaused] = useState(false);\n\n  useEffect(() => {\n    if (!audioRef.current) return;\n\n    const handleTimeUpdate = () => {\n      const currentTime = audioRef.current.currentTime;\n      console.log('Current Time:', currentTime);\n      const index = findHighlightedIndex(currentTime);\n      console.log('Highlighted Index:', index); // Add console log for highlighted index\n      setHighlightedIndex(index);\n    };\n\n    const findHighlightedIndex = (currentTime) => {\n      let totalDuration = 0;\n      for (let i = 0; i < text.length; i++) {\n        totalDuration += getParagraphDuration(i);\n        if (currentTime < totalDuration) {\n          return i;\n        }\n      }\n      return -1; // No paragraph should be highlighted\n    };\n\n    const getParagraphDuration = (index) => {\n      // Define custom durations for each paragraph\n      const customDurations = [\n        7, // Duration for the first paragraph\n        7, // Duration for the second paragraph\n        5, // Duration for the third paragraph\n        5, // Duration for the fourth paragraph\n        7, // Duration for the fifth paragraph\n        5, // Duration for the sixth paragraph\n        5, // Duration for the seventh paragraph\n        8, // Duration for the eighth paragraph\n        2, // Duration for the ninth paragraph\n        \n        // Add more durations as needed for each paragraph\n      ];\n      // Return the duration for the corresponding paragraph index\n      return customDurations[index] || 0;\n    };\n\n    const handleAudioPause = () => {\n      setIsPaused(true);\n      // Reset highlighted index only if not already paused\n      if (!isPaused) setHighlightedIndex(-1);\n    };\n\n    const handleAudioPlay = () => {\n      setIsPaused(false);\n    };\n\n    audioRef.current.addEventListener('timeupdate', handleTimeUpdate);\n    audioRef.current.addEventListener('pause', handleAudioPause);\n    audioRef.current.addEventListener('play', handleAudioPlay);\n\n    return () => {\n      audioRef.current.removeEventListener('timeupdate', handleTimeUpdate);\n      audioRef.current.removeEventListener('pause', handleAudioPause);\n      audioRef.current.removeEventListener('play', handleAudioPlay);\n    };\n  }, [audioRef, isPaused, text]); // Added text to dependency array\n\n  return (\n    <div className={`transcript ${isPaused ? 'paused' : ''}`}>\n      {text.map((sentence, index) => (\n        <p key={index} className={index === highlightedIndex ? 'highlighted' : ''}>\n          {sentence}\n        </p>\n      ))}\n    </div>\n  );\n};\n\nexport default Transcript;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}