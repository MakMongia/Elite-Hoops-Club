{"ast":null,"code":"import React from'react';import DataTable from'../DataTable/dataTable';import eventsData from'./eventsData.json';import ErrorBoundary from'../../errorBoundary';// Import Error Boundary\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function Events(){const filteredData=eventsData;return/*#__PURE__*/_jsx(ErrorBoundary,{children:/*#__PURE__*/_jsxs(\"section\",{id:\"events\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Upcoming Events\"}),/*#__PURE__*/_jsx(\"div\",{className:\"events-container\",children:/*#__PURE__*/_jsx(DataTable,{data:filteredData})})]})});}export default Events;","map":{"version":3,"names":["React","DataTable","eventsData","ErrorBoundary","jsx","_jsx","jsxs","_jsxs","Events","filteredData","children","id","className","data"],"sources":["/Users/mayank.mongia/Desktop/Personal/Repo Final/BASKETBALLCLUB/Elite-Final/WIP/GettingThere/Untitled/my-app/src/Component/Main/UpcomingEvents/upcomingEvents.js"],"sourcesContent":["import React from 'react';\nimport DataTable from '../DataTable/dataTable';\nimport eventsData from './eventsData.json';\nimport ErrorBoundary from '../../errorBoundary'; // Import Error Boundary\n\nfunction Events() {\n  const filteredData = eventsData;\n\n  return (\n    <ErrorBoundary>\n      <section id=\"events\">\n        <h1>Upcoming Events</h1>\n        <div className=\"events-container\">\n          {/* Always render DataTable */}\n          <DataTable data={filteredData} />\n        </div>\n      </section>\n    </ErrorBoundary>\n  );\n}\n\nexport default Events;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,SAAS,KAAM,wBAAwB,CAC9C,MAAO,CAAAC,UAAU,KAAM,mBAAmB,CAC1C,MAAO,CAAAC,aAAa,KAAM,qBAAqB,CAAE;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEjD,QAAS,CAAAC,MAAMA,CAAA,CAAG,CAChB,KAAM,CAAAC,YAAY,CAAGP,UAAU,CAE/B,mBACEG,IAAA,CAACF,aAAa,EAAAO,QAAA,cACZH,KAAA,YAASI,EAAE,CAAC,QAAQ,CAAAD,QAAA,eAClBL,IAAA,OAAAK,QAAA,CAAI,iBAAe,CAAI,CAAC,cACxBL,IAAA,QAAKO,SAAS,CAAC,kBAAkB,CAAAF,QAAA,cAE/BL,IAAA,CAACJ,SAAS,EAACY,IAAI,CAAEJ,YAAa,CAAE,CAAC,CAC9B,CAAC,EACC,CAAC,CACG,CAAC,CAEpB,CAEA,cAAe,CAAAD,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}