{"ast":null,"code":"var _jsxFileName = \"/Users/mayank.mongia/Desktop/Personal/Repo Final/BASKETBALLCLUB/Elite-Final/WIP/GettingThere/Untitled/my-app/src/Component/Main/searchBar/searchLogic.js\",\n  _s = $RefreshSig$();\n// In the parent component where search functionality is implemented\n\nimport React, { useState } from 'react';\nimport SearchLogic from './SearchLogic';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ParentComponent() {\n  _s();\n  // Initialize searchResults state\n  const [searchResults, setSearchResults] = useState([]);\n\n  // Function to handle search logic and update searchResults state\n  const handleSearch = searchText => {\n    // Perform search logic here and update searchResults state\n    const results = performSearch(searchText); // Example: Perform search logic\n    setSearchResults(results);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(SearchLogic, {\n      searchResults: searchResults\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_s(ParentComponent, \"yyVBuiEzaYu8nxmfiuyN+Jj3pbw=\");\n_c = ParentComponent;\nexport default ParentComponent;\nvar _c;\n$RefreshReg$(_c, \"ParentComponent\");","map":{"version":3,"names":["React","useState","SearchLogic","jsxDEV","_jsxDEV","ParentComponent","_s","searchResults","setSearchResults","handleSearch","searchText","results","performSearch","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mayank.mongia/Desktop/Personal/Repo Final/BASKETBALLCLUB/Elite-Final/WIP/GettingThere/Untitled/my-app/src/Component/Main/searchBar/searchLogic.js"],"sourcesContent":["// In the parent component where search functionality is implemented\n\nimport React, { useState } from 'react';\nimport SearchLogic from './SearchLogic';\n\nfunction ParentComponent() {\n  // Initialize searchResults state\n  const [searchResults, setSearchResults] = useState([]);\n\n  // Function to handle search logic and update searchResults state\n  const handleSearch = (searchText) => {\n    // Perform search logic here and update searchResults state\n    const results = performSearch(searchText); // Example: Perform search logic\n    setSearchResults(results);\n  };\n\n  return (\n    <div>\n      {/* Pass searchResults state and handleSearch function as props to SearchLogic component */}\n      <SearchLogic searchResults={searchResults} />\n      {/* Other components and UI elements */}\n    </div>\n  );\n}\n\nexport default ParentComponent;\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACzB;EACA,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;;EAEtD;EACA,MAAMQ,YAAY,GAAIC,UAAU,IAAK;IACnC;IACA,MAAMC,OAAO,GAAGC,aAAa,CAACF,UAAU,CAAC,CAAC,CAAC;IAC3CF,gBAAgB,CAACG,OAAO,CAAC;EAC3B,CAAC;EAED,oBACEP,OAAA;IAAAS,QAAA,eAEET,OAAA,CAACF,WAAW;MAACK,aAAa,EAAEA;IAAc;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAE1C,CAAC;AAEV;AAACX,EAAA,CAlBQD,eAAe;AAAAa,EAAA,GAAfb,eAAe;AAoBxB,eAAeA,eAAe;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}